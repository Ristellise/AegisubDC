<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="16.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{BC9409AE-99BC-3D20-AD8C-48E82B0FE2FF}</ProjectGuid>
    <WindowsTargetPlatformVersion>10.0.18362.0</WindowsTargetPlatformVersion>
    <Keyword>Win32Proj</Keyword>
    <Platform>x64</Platform>
    <ProjectName>ALL_BUILD</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>Utility</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v142</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">$(Platform)\$(Configuration)\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\TestSub\vendor\exten\harfbuzz\src;D:\TestSub\vendor\exten\harfbuzz\build\src;D:\TestSub\vendor\exten\freetype\include;D:\TestSub\vendor\exten\freetype\include\freetype;D:\TestSub\vendor\exten\icu4c\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\TestSub\vendor\exten\harfbuzz\src;D:\TestSub\vendor\exten\harfbuzz\build\src;D:\TestSub\vendor\exten\freetype\include;D:\TestSub\vendor\exten\freetype\include\freetype;D:\TestSub\vendor\exten\icu4c\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\TestSub\vendor\exten\harfbuzz\src;D:\TestSub\vendor\exten\harfbuzz\build\src;D:\TestSub\vendor\exten\freetype\include;D:\TestSub\vendor\exten\freetype\include\freetype;D:\TestSub\vendor\exten\icu4c\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <Midl>
      <AdditionalIncludeDirectories>D:\TestSub\vendor\exten\harfbuzz\src;D:\TestSub\vendor\exten\harfbuzz\build\src;D:\TestSub\vendor\exten\freetype\include;D:\TestSub\vendor\exten\freetype\include\freetype;D:\TestSub\vendor\exten\icu4c\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\TestSub\vendor\exten\harfbuzz\CMakeLists.txt">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/TestSub/vendor/exten/harfbuzz/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
"D:\System Wide Binaries\bin\cmake.exe" -SD:/TestSub/vendor/exten/harfbuzz -BD:/TestSub/vendor/exten/harfbuzz/build --check-stamp-file D:/TestSub/vendor/exten/harfbuzz/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeCInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeCXXInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeCommonLanguageInclude.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeGenericSystem.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeInitializeConfigs.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeLanguageInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeRCInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeSystemSpecificInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeSystemSpecificInitialize.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CheckFunctionExists.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CheckIncludeFile.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Compiler\MSVC-C.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Compiler\MSVC-CXX.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindFreetype.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindPackageMessage.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindPkgConfig.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindPythonInterp.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\GNUInstallDirs.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\Windows-MSVC-C.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\Windows-MSVC-CXX.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\Windows-MSVC.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\Windows.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\WindowsPaths.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\SelectLibraryConfigurations.cmake;D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\3.17.3\CMakeCCompiler.cmake;D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\3.17.3\CMakeCXXCompiler.cmake;D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\3.17.3\CMakeRCCompiler.cmake;D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\3.17.3\CMakeSystem.cmake;D:\TestSub\vendor\exten\harfbuzz\build\try_compile_intel_atomic_primitives.c;D:\TestSub\vendor\exten\harfbuzz\build\try_compile_solaris_atomic_ops.c;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/TestSub/vendor/exten/harfbuzz/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
"D:\System Wide Binaries\bin\cmake.exe" -SD:/TestSub/vendor/exten/harfbuzz -BD:/TestSub/vendor/exten/harfbuzz/build --check-stamp-file D:/TestSub/vendor/exten/harfbuzz/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeCInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeCXXInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeCommonLanguageInclude.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeGenericSystem.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeInitializeConfigs.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeLanguageInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeRCInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeSystemSpecificInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeSystemSpecificInitialize.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CheckFunctionExists.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CheckIncludeFile.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Compiler\MSVC-C.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Compiler\MSVC-CXX.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindFreetype.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindPackageMessage.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindPkgConfig.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindPythonInterp.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\GNUInstallDirs.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\Windows-MSVC-C.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\Windows-MSVC-CXX.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\Windows-MSVC.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\Windows.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\WindowsPaths.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\SelectLibraryConfigurations.cmake;D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\3.17.3\CMakeCCompiler.cmake;D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\3.17.3\CMakeCXXCompiler.cmake;D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\3.17.3\CMakeRCCompiler.cmake;D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\3.17.3\CMakeSystem.cmake;D:\TestSub\vendor\exten\harfbuzz\build\try_compile_intel_atomic_primitives.c;D:\TestSub\vendor\exten\harfbuzz\build\try_compile_solaris_atomic_ops.c;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/TestSub/vendor/exten/harfbuzz/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
"D:\System Wide Binaries\bin\cmake.exe" -SD:/TestSub/vendor/exten/harfbuzz -BD:/TestSub/vendor/exten/harfbuzz/build --check-stamp-file D:/TestSub/vendor/exten/harfbuzz/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeCInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeCXXInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeCommonLanguageInclude.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeGenericSystem.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeInitializeConfigs.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeLanguageInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeRCInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeSystemSpecificInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeSystemSpecificInitialize.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CheckFunctionExists.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CheckIncludeFile.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Compiler\MSVC-C.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Compiler\MSVC-CXX.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindFreetype.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindPackageMessage.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindPkgConfig.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindPythonInterp.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\GNUInstallDirs.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\Windows-MSVC-C.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\Windows-MSVC-CXX.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\Windows-MSVC.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\Windows.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\WindowsPaths.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\SelectLibraryConfigurations.cmake;D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\3.17.3\CMakeCCompiler.cmake;D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\3.17.3\CMakeCXXCompiler.cmake;D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\3.17.3\CMakeRCCompiler.cmake;D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\3.17.3\CMakeSystem.cmake;D:\TestSub\vendor\exten\harfbuzz\build\try_compile_intel_atomic_primitives.c;D:\TestSub\vendor\exten\harfbuzz\build\try_compile_solaris_atomic_ops.c;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/TestSub/vendor/exten/harfbuzz/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
"D:\System Wide Binaries\bin\cmake.exe" -SD:/TestSub/vendor/exten/harfbuzz -BD:/TestSub/vendor/exten/harfbuzz/build --check-stamp-file D:/TestSub/vendor/exten/harfbuzz/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeCInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeCXXInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeCommonLanguageInclude.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeGenericSystem.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeInitializeConfigs.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeLanguageInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeRCInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeSystemSpecificInformation.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CMakeSystemSpecificInitialize.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CheckFunctionExists.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\CheckIncludeFile.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Compiler\MSVC-C.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Compiler\MSVC-CXX.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindFreetype.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindPackageHandleStandardArgs.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindPackageMessage.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindPkgConfig.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\FindPythonInterp.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\GNUInstallDirs.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\Windows-MSVC-C.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\Windows-MSVC-CXX.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\Windows-MSVC.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\Windows.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\Platform\WindowsPaths.cmake;D:\System Wide Binaries\share\cmake-3.17\Modules\SelectLibraryConfigurations.cmake;D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\3.17.3\CMakeCCompiler.cmake;D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\3.17.3\CMakeCXXCompiler.cmake;D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\3.17.3\CMakeRCCompiler.cmake;D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\3.17.3\CMakeSystem.cmake;D:\TestSub\vendor\exten\harfbuzz\build\try_compile_intel_atomic_primitives.c;D:\TestSub\vendor\exten\harfbuzz\build\try_compile_solaris_atomic_ops.c;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\TestSub\vendor\exten\harfbuzz\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\TestSub\vendor\exten\harfbuzz\build\ZERO_CHECK.vcxproj">
      <Project>{572EB139-608F-3C63-B59D-1130F28101C1}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
    <ProjectReference Include="D:\TestSub\vendor\exten\harfbuzz\build\harfbuzz.vcxproj">
      <Project>{0514C080-EFE4-3DC0-ACE3-233CA857547A}</Project>
      <Name>harfbuzz</Name>
    </ProjectReference>
    <ProjectReference Include="D:\TestSub\vendor\exten\harfbuzz\build\harfbuzz-icu.vcxproj">
      <Project>{38EC592E-D567-3A70-BEA3-7D5EB3C83283}</Project>
      <Name>harfbuzz-icu</Name>
    </ProjectReference>
    <ProjectReference Include="D:\TestSub\vendor\exten\harfbuzz\build\harfbuzz-subset.vcxproj">
      <Project>{F5521D11-8718-376F-9501-ADED309F6C07}</Project>
      <Name>harfbuzz-subset</Name>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>